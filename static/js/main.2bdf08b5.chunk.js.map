{"version":3,"sources":["store/todos/action-types.js","store/todos/actions.js","component/Footer.js","component/Header.js","store/todos/selectors.js","component/TodoItem.js","component/Main.js","component/TodoApp.js","App.js","store/todos/index.js","store/index.js","index.js"],"names":["ADD_TODO","TOGGLE_TODO","FILTER_TODO","id","Footer","dispatch","useDispatch","dispatchFilter","filterType","type","payload","filterTodo","className","href","onClick","Header","useState","value","setValue","placeholder","onChange","e","target","onKeyDown","text","key","trim","done","todosSelector","state","todos","items","filter","todo","TodoItem","checked","toggleTodo","Main","itemFilter","useSelector","map","for","TodoApp","App","defaultState","reducer","action","newTodo","createStore","combineReducers","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.2bdf08b5.chunk.js","sourcesContent":["export const ADD_TODO = 'ADD_TODO'\n\nexport const TOGGLE_TODO = 'TOGGLE_TODO'\n\nexport const FILTER_TODO = 'FILTER_TODO'","import { ADD_TODO, FILTER_TODO, TOGGLE_TODO } from './action-types'\n\nlet id = 2;\n\nexport const addTodo = text => ({\n  type: ADD_TODO,\n  payload: {\n    id: id++,\n    text,\n    done: false,\n  }\n})\n\nexport const toggleTodo = id => ({\n  type: TOGGLE_TODO,\n  payload: id,\n})\n\nexport const filterTodo = filterType => ({\n  type: FILTER_TODO,\n  payload: filterType,\n})\n\n","import React from 'react';\nimport { useDispatch } from 'react-redux'\nimport { filterTodo } from '../store/todos/actions'\n\nfunction Footer() {\n  const dispatch = useDispatch()\n\n  const dispatchFilter = filterType => dispatch(filterTodo(filterType))\n\n  return(\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n          <strong>\n              2\n          </strong>\n          item left\n      </span>\n      <ul className=\"filters\">\n          <li>\n              <a href=\"#/all\" onClick={() => dispatchFilter('all')}>All</a>\n          </li>\n          <li>\n              <a href=\"#/active\" onClick={() => dispatchFilter('active')}>Active</a>\n          </li>\n          <li>\n              <a href=\"#/completed\" onClick={() => dispatchFilter('completed')}>Completed</a>\n          </li>\n      </ul>\n      <button className=\"clear-completed\">Clear completed</button>\n    </footer>\n  )\n}\n\nexport default Footer;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux'\nimport { addTodo } from '../store/todos/actions'\n\nfunction Header() {\n  const dispatch = useDispatch()\n  const [value, setValue] = useState('')\n\n  const changeHandler = e => {\n    setValue(e.target.value)\n  }\n\n  const keyDownHandler = e => {\n    if (e.key !== 'Enter') {\n      return\n    }\n\n    if (value.trim() === '') {\n      return\n    }\n\n    dispatch(addTodo(value.trim()))\n  }\n\n  return(\n    <header className=\"header\">\n        <h1>todos</h1>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onChange={changeHandler}\n          onKeyDown={keyDownHandler}\n          value={value}\n        />\n    </header>\n  )\n}\n\nexport default Header;","export const todosSelector = state => state.todos.items.filter(todo => {\n  const { filterType } = state.todos\n\n  switch (filterType) {\n    case 'all':\n      return true\n\n    case 'active':\n      return !todo.done\n\n    case 'completed':\n      return todo.done\n\n    default:\n      return true\n  }\n})","import React from 'react';\nimport { useDispatch } from 'react-redux'\nimport { toggleTodo } from '../store/todos/actions'\n\nfunction TodoItem({id, text, done }) {\n  const dispatch = useDispatch()\n\n  const handleChange = () => {\n    dispatch(toggleTodo(id))\n  }\n\n  return(\n    <li className={done ? 'completed' : ''}>\n        <div className=\"view\">\n            <input\n             className=\"toggle\"\n              type=\"checkbox\"\n              checked={done}\n              onChange={handleChange}\n            />\n            <label>{text}</label>\n            <button className=\"destroy\"/>\n        </div>\n        <input className=\"edit\" value=\"Create a TodoMVC template\" />\n    </li>\n  )\n}\n\nexport default TodoItem;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { todosSelector } from '../store/todos/selectors';\nimport TodoItem from './TodoItem';\n\nfunction Main() {\n  const todos = useSelector(todosSelector)\n  \n  const itemFilter = todos.map(todo=> (\n    <TodoItem\n      key={todo.id}\n      id={todo.id}\n      text={todo.text}\n      done={todo.done}\n    />\n  ))\n\n  return(\n    <section className=\"main\">\n      <input id=\"toggle-all\"className=\"toggle-all\" type=\"checkbox\"/>\n      <label for=\"toggle-all\">Mark all as complete</label>\n      <ul className=\"todo-list\">\n        {itemFilter}\n      </ul>\n    </section>\n  )\n}\n\nexport default Main;","import React from 'react';\nimport Footer from './Footer';\nimport Header from './Header';\nimport Main from './Main';\n\nfunction TodoApp() {\n\n  return(\n    <section className=\"todoapp\">\n        <Header/>\n        <Main />\n        <Footer/>\n    </section>\n  )\n}\n\nexport default TodoApp;","import React from 'react';\nimport TodoApp from './component/TodoApp';\n\nfunction App() {\n  return ( \n      <>\n        <TodoApp/>\n        <footer className=\"info\">\n            <p>Double-click to edit a todo</p>\n            <p>Template by <a href=\"http://sindresorhus.com\">Sindre Sorhus</a></p>\n            <p>Created by <a href=\"http://todomvc.com\">you</a></p>\n            <p>Part of <a href=\"http://todomvc.com\">TodoMVC</a></p>\n        </footer>\n      </>\n    )\n}\n\n\nexport default App","import { ADD_TODO, FILTER_TODO, TOGGLE_TODO } from './action-types'\n\nconst defaultState = {\n  filterType: 'all',\n  items: [\n    { id: 1, text: 'React', done: false },\n  ],\n}\n\nconst reducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      const newTodo = {\n        ...action.payload,\n      }\n\n      return {\n        ...state,\n        items: [\n          ...state.items,\n          newTodo,\n        ]\n      }\n\n    case TOGGLE_TODO:\n      const id = action.payload\n\n      const items = state.items.map(todo => {\n        if (todo.id !== id) {\n          return todo\n        }\n\n        return {\n          ...todo,\n          done: !todo.done,\n        }\n      })\n\n      return {\n        ...state,\n        items,\n      }\n\n    case FILTER_TODO:\n      const filterType = action.payload\n\n      return {\n        ...state,\n        filterType,\n      }\n      \n    default:\n      return state\n  }\n}\n\nexport default reducer","import { createStore, combineReducers } from 'redux'\nimport todos from './todos'\n\nexport default createStore(combineReducers({\n  todos,\n}))","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport store from './store'\nimport 'todomvc-app-css/index.css'\n\nReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>\n  ,\n  document.getElementById('root')\n)"],"sourceRoot":""}