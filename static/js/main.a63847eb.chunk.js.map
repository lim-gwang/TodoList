{"version":3,"sources":["store/todos/action-types.js","store/todos/actions.js","component/Footer.js","component/Header.js","store/todos/selectors.js","component/TodoItem.js","component/Main.js","component/TodoApp.js","App.js","store/todos/index.js","store/index.js","index.js"],"names":["ADD_TODO","TOGGLE_TODO","FILTER_TODO","ALL_TOGGLE_TODO","CLEAR_COMPLETED","DEL_TODO","id","allToggleTodo","type","Footer","dispatch","useDispatch","todoChecked","useSelector","state","todos","items","filter","todo","done","length","dispatchFilter","filterType","payload","filterTodo","className","href","onClick","Header","useState","value","setValue","placeholder","onChange","e","target","onKeyDown","text","key","trim","todosSelector","TodoItem","checked","toggleTodo","delTodo","defaultValue","Main","allToggleSwitch","itemFilter","map","htmlFor","TodoApp","connect","defaultState","reducer","action","newTodo","findChecked","find","item","todoItems","checkedTodos","createStore","combineReducers","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.a63847eb.chunk.js","sourcesContent":["export const ADD_TODO = 'ADD_TODO'\n\nexport const TOGGLE_TODO = 'TOGGLE_TODO'\n\nexport const FILTER_TODO = 'FILTER_TODO'\n\nexport const ALL_TOGGLE_TODO = 'ALL_TOGGLE_TODO'\n\nexport const CLEAR_COMPLETED = \"CLEAR_COMPLETED\"\n\nexport const DEL_TODO = \"DEL_TODO\"","import { \n  ADD_TODO, \n  FILTER_TODO, \n  TOGGLE_TODO, \n  ALL_TOGGLE_TODO,\n  CLEAR_COMPLETED,\n  DEL_TODO } from './action-types'\n\nlet id = 2;\n\nexport const addTodo = text => ({\n  type: ADD_TODO,\n  payload: {\n    id: id++,\n    text,\n    done: false,\n  }\n})\n\nexport const toggleTodo = id => ({\n  type: TOGGLE_TODO,\n  payload: id,\n})\n\nexport const allToggleTodo = () => ({\n  type: ALL_TOGGLE_TODO,\n})\n\nexport const filterTodo = filterType => ({\n  type: FILTER_TODO,\n  payload: filterType,\n})\n\nexport const clearCompleted = () => ({\n  type: CLEAR_COMPLETED,\n})\n\nexport const delTodo = id => ({\n  type: DEL_TODO,\n  payload: id,\n})\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { filterTodo, clearCompleted } from '../store/todos/actions'\nfunction Footer() {\n  const dispatch = useDispatch()\n  const todos = useSelector(state => (\n    state.todos.items\n  ))\n\n  const todoChecked = todos.filter(todo => !todo.done).length;\n\n  const dispatchFilter = filterType => dispatch(filterTodo(filterType))\n  \n  return(\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n          <strong>\n            {todoChecked}\n          </strong>\n          item left\n      </span>\n      <ul className=\"filters\">\n          <li>\n              <a href=\"#/all\" onClick={() => dispatchFilter('all')}>All</a>\n          </li>\n          <li>\n              <a href=\"#/active\" onClick={() => dispatchFilter('active')}>Active</a>\n          </li>\n          <li>\n              <a href=\"#/completed\" onClick={() => dispatchFilter('completed')}>Completed</a>\n          </li>\n      </ul>\n      <button \n        className=\"clear-completed\"\n        onClick={() => dispatch(clearCompleted())}\n      >\n        Clear completed\n      </button>\n    </footer>\n  )\n}\n\nexport default Footer;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux'\nimport { addTodo } from '../store/todos/actions'\n\nfunction Header() {\n  const dispatch = useDispatch()\n  const [value, setValue] = useState('')\n\n  const changeHandler = e => {\n    setValue(e.target.value)\n  }\n\n  const keyDownHandler = e => {\n    if (e.key !== 'Enter') {\n      return\n    }\n\n    if (value.trim() === '') {\n      return\n    }\n\n    dispatch(addTodo(value.trim()))\n    setValue('')\n  }\n\n  return(\n    <header className=\"header\">\n        <h1>todos</h1>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onChange={changeHandler}\n          onKeyDown={keyDownHandler}\n          value={value}\n        />\n    </header>\n  )\n}\n\nexport default Header;","export const todosSelector = state => state.todos.items.filter(todo => {\n  const { filterType } = state.todos\n\n  switch (filterType) {\n    case 'all':\n      return true\n\n    case 'active':\n      return !todo.done\n\n    case 'completed':\n      return todo.done\n\n    default:\n      return true\n  }\n})","import React from 'react';\nimport { useDispatch } from 'react-redux'\nimport { toggleTodo, delTodo } from '../store/todos/actions'\n\nfunction TodoItem({id, text, done }) {\n  const dispatch = useDispatch()\n\n  const handleChange = () => {\n    dispatch(toggleTodo(id))\n  }\n\n  return(\n    <li className={done ? 'completed' : ''}>\n        <div className=\"view\">\n            <input\n              className=\"toggle\"\n              type=\"checkbox\"\n              checked={done}\n              onChange={handleChange}\n            />\n            <label>{text}</label>\n            <button \n              className=\"destroy\"\n              onClick={() => dispatch(delTodo(id))}\n            />\n        </div>\n        <input className=\"edit\" defaultValue=\"Create a TodoMVC template\" />\n    </li>\n  )\n}\n\nexport default TodoItem;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { todosSelector } from '../store/todos/selectors';\nimport TodoItem from './TodoItem';\nimport { allToggleTodo } from '../store/todos/actions';\n\nfunction Main() {\n  const dispatch = useDispatch()\n\n  const todos = useSelector(todosSelector)\n\n  const allToggleSwitch = useSelector(allToggleTodo).payload;\n\n  const itemFilter = todos.map(todo=> (\n    <TodoItem\n      key={todo.id}\n      id={todo.id}\n      text={todo.text}\n      done={todo.done}\n    />\n  ));\n  return(\n    <section className=\"main\">\n      <input id=\"toggle-all\" \n        className=\"toggle-all\"\n        type=\"checkbox\"\n        checked={allToggleSwitch}\n        onChange={()=> dispatch(allToggleTodo())}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n      <ul className=\"todo-list\">\n        {itemFilter}\n      </ul>\n    </section>\n  )\n}\n\nexport default Main;","import React from 'react';\nimport Footer from './Footer';\nimport Header from './Header';\nimport Main from './Main';\n\nfunction TodoApp() {\n  return(\n    <section className=\"todoapp\">\n        <Header/>\n        <Main />\n        <Footer/>\n    </section>\n  )\n}\n\nexport default TodoApp;","import React from 'react';\nimport { connect } from 'react-redux';\nimport TodoApp from './component/TodoApp';\n\nfunction App() {\n  return ( \n      <>\n        <TodoApp/>\n        <footer className=\"info\">\n            <p>Double-click to edit a todo</p>\n            <p>Template by <a href=\"http://sindresorhus.com\">Sindre Sorhus</a></p>\n            <p>Created by <a href=\"http://todomvc.com\">you</a></p>\n            <p>Part of <a href=\"http://todomvc.com\">TodoMVC</a></p>\n        </footer>\n      </>\n    )\n}\n\n\nexport default connect()(App)","import { \n  ADD_TODO, \n  FILTER_TODO, \n  TOGGLE_TODO, \n  ALL_TOGGLE_TODO,\n  CLEAR_COMPLETED,\n  DEL_TODO } from './action-types'\n\nexport const defaultState = {\n  filterType: 'all',\n  items: [\n    { id: 1, text: 'React', done: false },\n  ],\n}\n\nconst reducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      const newTodo = {\n        ...action.payload,\n      }\n\n      return {\n        ...state,\n        items: [\n          ...state.items,\n          newTodo,\n        ]\n      }\n\n    case TOGGLE_TODO:\n      const id = action.payload\n\n      const items = state.items.map(todo => {\n        if (todo.id !== id) {\n          return todo\n        }\n\n        return {\n          ...todo,\n          done: !todo.done,\n        }\n      })\n\n      return {\n        ...state,\n        items,\n      }\n\n    case FILTER_TODO:\n      const filterType = action.payload\n\n      return {\n        ...state,\n        filterType,\n      }\n\n    case ALL_TOGGLE_TODO:\n      const findChecked = state.items.find(item => item.done === false);\n      const todoItems = state.items.map(todo => {\n        if (findChecked) {\n          return {\n            ...todo,\n            done: true,\n          }\n        } else {\n          return {\n            ...todo,\n            done: false,\n          }\n        }\n      })\n      return {\n        ...state,\n        items : todoItems,\n      }\n    case CLEAR_COMPLETED:\n      const checkedTodos = state.items.filter(todo => !todo.done);\n      return {\n        ...state,\n        items: checkedTodos,\n      }\n    case DEL_TODO:\n      const delTodo = state.items.filter(todo => todo.id !== action.payload);\n      return {\n        ...state,\n        items: delTodo,\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer","import { createStore, combineReducers } from 'redux'\nimport todos from './todos'\n\nexport default createStore(combineReducers({\n  todos,\n}))","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport store from './store'\nimport 'todomvc-app-css/index.css'\n\nReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>\n  ,\n  document.getElementById('root')\n)"],"sourceRoot":""}